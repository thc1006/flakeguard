# Prometheus Configuration for FlakeGuard
# 
# Production-ready Prometheus setup with:
# - Service discovery for FlakeGuard components
# - Appropriate scrape intervals for different metric types
# - Recording rules for SLI calculations
# - Alert rule integration

global:
  scrape_interval: 15s      # Default scrape interval
  evaluation_interval: 15s  # Evaluate rules every 15s
  external_labels:
    cluster: 'flakeguard-production'
    region: 'us-west-2'

# Rule files for alerts and recording rules
rule_files:
  - "prometheus-alerts.yaml"
  - "recording-rules.yaml"

# Scrape configurations
scrape_configs:
  # ============================================================================
  # FlakeGuard API Server
  # ============================================================================
  - job_name: 'flakeguard-api'
    scrape_interval: 15s
    metrics_path: /metrics
    static_configs:
      - targets: ['localhost:3000']
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'flakeguard-api'
    metric_relabel_configs:
      # Drop high-cardinality metrics in production if needed
      - source_labels: [__name__]
        regex: 'flakeguard_api_http_request_duration_seconds_bucket'
        target_label: __tmp_keep
        replacement: 'yes'

  # ============================================================================
  # FlakeGuard Worker Services  
  # ============================================================================
  - job_name: 'flakeguard-worker'
    scrape_interval: 15s
    metrics_path: /metrics
    # In production, use service discovery (Kubernetes, Consul, etc.)
    static_configs:
      - targets: ['localhost:9090']  # Worker metrics endpoint
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'flakeguard-worker'

  # ============================================================================
  # Infrastructure Dependencies
  # ============================================================================
  
  # PostgreSQL metrics (if using postgres_exporter)
  - job_name: 'postgres'
    scrape_interval: 30s
    static_configs:
      - targets: ['localhost:9187']
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'flakeguard-postgres'

  # Redis metrics (if using redis_exporter)
  - job_name: 'redis'
    scrape_interval: 30s  
    static_configs:
      - targets: ['localhost:9121']
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'flakeguard-redis'

  # Node exporter for system metrics
  - job_name: 'node'
    scrape_interval: 30s
    static_configs:
      - targets: ['localhost:9100']
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'flakeguard-node'

# ============================================================================
# Alertmanager Configuration
# ============================================================================
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# ============================================================================
# Storage Configuration  
# ============================================================================
storage:
  tsdb:
    retention.time: 30d      # Keep metrics for 30 days
    retention.size: 50GB     # Limit storage to 50GB
    min-block-duration: 2h   # Minimum block duration
    max-block-duration: 25h  # Maximum block duration

# ============================================================================
# Remote Write (Optional - for long-term storage)
# ============================================================================
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint.com/api/v1/write"
#     queue_config:
#       max_samples_per_send: 1000
#       max_shards: 200
#       capacity: 2500