// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Check Run Renderer > Snapshot Testing Compatibility > should produce consistent output for snapshot testing > check-run-renderer-output 1`] = `
{
  "actions": [
    {
      "description": "Quarantine 1 critical flaky test",
      "identifier": "quarantine",
      "label": "Quarantine Test",
    },
    {
      "description": "Create tracking issue for 2 persistent flaky tests",
      "identifier": "open_issue",
      "label": "Open Issue",
    },
  ],
  "summary": "## Flaky Test Candidates

The following tests show patterns consistent with flaky behavior:

| Test Name | Fail Count | Rerun Pass Rate | Last Failed Run | Severity |
|-----------|------------|-----------------|-----------------|----------|
| [com\\.example\\.integration\\.DatabaseConnectionTest](https://github.com/test-org/test-repo/blob/main/src/test/java/com/example/integration/DatabaseConnectionTest.java#L158) | 7 | 65.0% | 2024/1/15 | 🔴 Critical |
| [com\\.example\\.unit\\.AsyncOperationTest](https://github.com/test-org/test-repo/blob/main/src/test/java/com/example/unit/AsyncOperationTest.java#L92) | 3 | 88.0% | 2024/1/14 | 🟡 Warning |

### Severity Levels

- 🔴 **Critical** - High confidence flaky tests requiring immediate attention
- 🟡 **Warning** - Moderate confidence tests that may be flaky
- 🟢 **Stable** - Low confidence, likely not flaky but worth monitoring

### Understanding Flaky Tests

Flaky tests exhibit non-deterministic behavior, passing and failing without code changes. Common causes:

- **Timing Issues** - Race conditions and timing-dependent logic
- **External Dependencies** - Network calls, databases, third-party services
- **Resource Constraints** - Memory, CPU, or I/O limitations
- **Environment Factors** - System state, parallel execution, cleanup issues

### Recommended Actions

1. **Quarantine 1 critical test** to prevent CI instability
2. **Investigate 1 warning test** for potential improvements
3. **Rerun failed jobs** to confirm flaky behavior patterns
4. **Create tracking issues** for systematic resolution

*Analysis generated by FlakeGuard based on historical execution data and statistical models.*",
  "title": "🔍 FlakeGuard Analysis: 2 Flaky Test Candidates Detected",
}
`;
