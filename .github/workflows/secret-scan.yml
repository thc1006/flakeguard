name: Secret Scanning

on:
  push:
    branches: [main, develop, feature/*]
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: '0 2 * * 1' # Weekly scan on Mondays at 2 AM
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: read
  security-events: write
  pull-requests: write # For PR comments

jobs:
  trufflehog:
    name: TruffleHog Secret Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for accurate scanning

      # BLOCKING STEP: Fails only on verified secrets (not unverified findings)
      # This ensures CI blocks on real security issues while allowing investigation of potential false positives
      - name: Run TruffleHog (Blocking - Verified Secrets Only)
        uses: trufflesecurity/trufflehog@v3.82.13
        with:
          path: .
          base: ${{ github.event.pull_request.base.sha || 'HEAD~1' }}
          head: HEAD
          version: '3.90.5'
          extra_args: >
            --only-verified
            --no-update
            --github-actions
            --exclude-paths=.github/security/trufflehog-exclude-patterns.txt

      # NON-BLOCKING STEP: Generate full report including unverified findings
      # Upload as artifact for manual review. This step cannot fail the workflow (|| true)
      - name: Generate Full TruffleHog Report (Non-blocking)
        if: always()
        run: |
          echo "🔍 Generating comprehensive TruffleHog report (including unverified findings)..."
          
          # Run TruffleHog container directly to generate JSON report
          # Using --no-verification to include unverified secrets in the report
          docker run --rm \
            -v "$(pwd):/workdir" \
            -w /workdir \
            trufflesecurity/trufflehog:3.90.5 \
            filesystem \
            --json \
            --no-verification \
            --no-update \
            --exclude-paths=.github/security/trufflehog-exclude-patterns.txt \
            . > trufflehog-findings.json 2>/dev/null || true
          
          # Ensure we have a valid JSON file even if no findings
          if [ ! -s trufflehog-findings.json ]; then
            echo '{"message": "No findings detected", "scan_time": "'$(date -Iseconds)'", "findings": []}' > trufflehog-findings.json
          fi
          
          echo "📄 Report generated: trufflehog-findings.json"
        continue-on-error: true

      # Upload the comprehensive report as an artifact for human review
      - name: Upload TruffleHog Full Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trufflehog-findings
          path: trufflehog-findings.json
          retention-days: 30

      - name: Report TruffleHog Results
        if: always()
        run: |
          echo "✅ TruffleHog security scan completed"
          echo "📋 Blocking scan: Only verified secrets cause CI failure"
          echo "📄 Full report (including unverified findings) uploaded as artifact: trufflehog-findings"
          echo "💡 To download: Go to Actions → This run → Artifacts → trufflehog-findings"

  gitleaks:
    name: Gitleaks Secret Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for accurate scanning
      
      - name: Determine Gitleaks scan parameters
        id: gitleaks-mode
        run: |
          echo "Event: ${{ github.event_name }}"
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "🔍 Gitleaks: Scanning PR commits since ${{ github.event.pull_request.base.sha }}"
          else
            echo "📁 Gitleaks: Full repository scan for ${{ github.event_name }} event"
          fi
      
      - name: Run Gitleaks
        run: |
          echo "🔍 Running Gitleaks with config: .gitleaks.toml"
          docker run --rm \
            -v "${{ github.workspace }}:/workspace" \
            -w /workspace \
            ghcr.io/gitleaks/gitleaks:v8.18.4 \
            detect \
            --config=.gitleaks.toml \
            --exit-code=2 \
            --verbose \
            --redact

      - name: Report Gitleaks results
        if: always()
        run: |
          echo "✅ Gitleaks scan completed for event: ${{ github.event_name }}"

  results-handler:
    name: Handle Scan Results
    runs-on: ubuntu-latest
    needs: [trufflehog, gitleaks]
    if: always()
    steps:
      - name: Report overall results
        run: |
          echo "📊 Secret scanning workflow completed"
          echo "Event: ${{ github.event_name }}"
          echo "TruffleHog status: ${{ needs.trufflehog.result }}"
          echo "Gitleaks status: ${{ needs.gitleaks.result }}"
          
          if [[ "${{ needs.trufflehog.result }}" == "failure" || "${{ needs.gitleaks.result }}" == "failure" ]]; then
            echo "❌ One or more secret scanners detected potential issues"
            exit 1
          else
            echo "✅ No secrets detected by security scanners"
          fi

      - name: Comment on PR (if secrets found)
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const truffleStatus = '${{ needs.trufflehog.result }}';
            const gitleaksStatus = '${{ needs.gitleaks.result }}';
            
            let failedScanners = [];
            if (truffleStatus === 'failure') failedScanners.push('TruffleHog');
            if (gitleaksStatus === 'failure') failedScanners.push('Gitleaks');
            
            const comment = `⚠️ **Security Alert**: Potential secrets detected by ${failedScanners.join(' and ')}
            
            **What to do next:**
            1. Review the [workflow logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details
            2. Remove any sensitive information from your changes
            3. If these are false positives, update the allowlist in \`.github/security/\` directory
            
            **Scan Details:**
            - TruffleHog: ${truffleStatus === 'failure' ? '❌ Failed' : '✅ Passed'}
            - Gitleaks: ${gitleaksStatus === 'failure' ? '❌ Failed' : '✅ Passed'}
            
            This PR cannot be merged until security issues are resolved.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Comment on PR (if clean)
        if: success() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `✅ **Security Check Passed**: No secrets detected by security scanners
            
            **Scan Results:**
            - TruffleHog: ✅ No secrets found
            - Gitleaks: ✅ No secrets found
            
            This PR is clear for security review.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });