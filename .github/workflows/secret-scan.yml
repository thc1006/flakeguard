name: Secret Scanning

on:
  push:
    branches: [main, develop, feature/*]
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: '0 2 * * 1' # Weekly scan on Mondays at 2 AM
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: read
  security-events: write
  pull-requests: write # For PR comments

jobs:
  trufflehog:
    name: TruffleHog Secret Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for accurate scanning

      - name: Determine scan mode and parameters
        id: scan-mode
        run: |
          echo "Event: ${{ github.event_name }}"
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "mode=git" >> $GITHUB_OUTPUT
            echo "base_sha=${{ github.event.pull_request.base.sha }}" >> $GITHUB_OUTPUT
            echo "args=--since-commit=${{ github.event.pull_request.base.sha }} --fail --no-update --config=.github/security/trufflehog.yml" >> $GITHUB_OUTPUT
            echo "üîç Scanning commits since: ${{ github.event.pull_request.base.sha }}"
          else
            echo "mode=filesystem" >> $GITHUB_OUTPUT
            echo "args=. --fail --no-update --config=.github/security/trufflehog.yml" >> $GITHUB_OUTPUT
            echo "üìÅ Performing full filesystem scan for event: ${{ github.event_name }}"
          fi

      - name: Run TruffleHog (Git scan for PR)
        if: github.event_name == 'pull_request'
        uses: trufflesecurity/trufflehog@v3.82.13
        with:
          scan: git
          args: ${{ steps.scan-mode.outputs.args }}
        env:
          # Ensure we have proper git context for PR scanning
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run TruffleHog (Filesystem scan)
        if: github.event_name != 'pull_request'
        uses: trufflesecurity/trufflehog@v3.82.13
        with:
          scan: filesystem
          args: ${{ steps.scan-mode.outputs.args }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Report scan results
        if: always()
        run: |
          echo "‚úÖ TruffleHog scan completed for event: ${{ github.event_name }}"
          echo "üìã Scan mode used: ${{ steps.scan-mode.outputs.mode }}"
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "üîç Scanned commits since: ${{ steps.scan-mode.outputs.base_sha }}"
          else
            echo "üìÅ Performed full filesystem scan"
          fi

  gitleaks:
    name: Gitleaks Secret Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for accurate scanning
      
      - name: Determine Gitleaks scan parameters
        id: gitleaks-mode
        run: |
          echo "Event: ${{ github.event_name }}"
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "üîç Gitleaks: Scanning PR commits since ${{ github.event.pull_request.base.sha }}"
          else
            echo "üìÅ Gitleaks: Full repository scan for ${{ github.event_name }} event"
          fi
      
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_CONFIG: .github/security/gitleaks.toml

      - name: Report Gitleaks results
        if: always()
        run: |
          echo "‚úÖ Gitleaks scan completed for event: ${{ github.event_name }}"

  results-handler:
    name: Handle Scan Results
    runs-on: ubuntu-latest
    needs: [trufflehog, gitleaks]
    if: always()
    steps:
      - name: Report overall results
        run: |
          echo "üìä Secret scanning workflow completed"
          echo "Event: ${{ github.event_name }}"
          echo "TruffleHog status: ${{ needs.trufflehog.result }}"
          echo "Gitleaks status: ${{ needs.gitleaks.result }}"
          
          if [[ "${{ needs.trufflehog.result }}" == "failure" || "${{ needs.gitleaks.result }}" == "failure" ]]; then
            echo "‚ùå One or more secret scanners detected potential issues"
            exit 1
          else
            echo "‚úÖ No secrets detected by security scanners"
          fi

      - name: Comment on PR (if secrets found)
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const truffleStatus = '${{ needs.trufflehog.result }}';
            const gitleaksStatus = '${{ needs.gitleaks.result }}';
            
            let failedScanners = [];
            if (truffleStatus === 'failure') failedScanners.push('TruffleHog');
            if (gitleaksStatus === 'failure') failedScanners.push('Gitleaks');
            
            const comment = `‚ö†Ô∏è **Security Alert**: Potential secrets detected by ${failedScanners.join(' and ')}
            
            **What to do next:**
            1. Review the [workflow logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details
            2. Remove any sensitive information from your changes
            3. If these are false positives, update the allowlist in \`.github/security/\` directory
            
            **Scan Details:**
            - TruffleHog: ${truffleStatus === 'failure' ? '‚ùå Failed' : '‚úÖ Passed'}
            - Gitleaks: ${gitleaksStatus === 'failure' ? '‚ùå Failed' : '‚úÖ Passed'}
            
            This PR cannot be merged until security issues are resolved.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Comment on PR (if clean)
        if: success() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `‚úÖ **Security Check Passed**: No secrets detected by security scanners
            
            **Scan Results:**
            - TruffleHog: ‚úÖ No secrets found
            - Gitleaks: ‚úÖ No secrets found
            
            This PR is clear for security review.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });