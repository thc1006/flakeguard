# Simplified development setup - infrastructure only
services:
  postgres:
    image: postgres:16-alpine
    container_name: flakeguard-postgres
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: flakeguard
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d flakeguard']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - flakeguard-network

  redis:
    image: redis:7-alpine
    container_name: flakeguard-redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    command: >
      redis-server
      --appendonly yes
      --appendfsync everysec
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - flakeguard-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  flakeguard-network:
    name: flakeguard-network
    driver: bridge
