# FlakeGuard Monitoring Stack
# 
# Complete observability stack with:
# - Prometheus for metrics collection
# - Grafana for visualization  
# - Alertmanager for alert routing
# - Node exporter for system metrics

version: '3.8'

services:
  # ============================================================================
  # Prometheus - Metrics Collection & Alerting
  # ============================================================================
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: flakeguard-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/prometheus-alerts.yaml:/etc/prometheus/prometheus-alerts.yaml:ro
      - ./monitoring/recording-rules.yaml:/etc/prometheus/recording-rules.yaml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--storage.tsdb.retention.size=50GB'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--web.external-url=http://localhost:9090'
      - '--alertmanager.notification-queue-capacity=10000'
    restart: unless-stopped
    networks:
      - monitoring
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.flakeguard.local`)"
      - "traefik.http.routers.prometheus.tls=true"

  # ============================================================================
  # Alertmanager - Alert Routing & Notifications
  # ============================================================================
  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: flakeguard-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - ./monitoring/templates/:/etc/alertmanager/templates/:ro
      - alertmanager-data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
      - '--web.route-prefix=/'
    restart: unless-stopped
    networks:
      - monitoring
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.alertmanager.rule=Host(`alertmanager.flakeguard.local`)"
      - "traefik.http.routers.alertmanager.tls=true"

  # ============================================================================
  # Grafana - Metrics Visualization & Dashboards
  # ============================================================================
  grafana:
    image: grafana/grafana:10.1.0
    container_name: flakeguard-grafana
    ports:
      - "3001:3000"  # Avoid conflict with FlakeGuard API on port 3000
    volumes:
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - grafana-data:/var/lib/grafana
    environment:
      # Security
      - GF_SECURITY_ADMIN_PASSWORD=admin123  # Change in production!
      - GF_SECURITY_ADMIN_USER=admin
      
      # Server settings
      - GF_SERVER_ROOT_URL=http://localhost:3001
      - GF_SERVER_DOMAIN=localhost
      
      # Analytics (disable for privacy)
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
      
      # Users and authentication
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_DEFAULT_THEME=dark
      
      # Prometheus data source
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel,grafana-clock-panel
      
      # Dashboards
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/var/lib/grafana/dashboards/flakeguard-overview.json
    restart: unless-stopped
    networks:
      - monitoring
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.flakeguard.local`)"
      - "traefik.http.routers.grafana.tls=true"
    depends_on:
      - prometheus

  # ============================================================================
  # Node Exporter - System Metrics
  # ============================================================================
  node-exporter:
    image: prom/node-exporter:v1.6.1
    container_name: flakeguard-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      - '--web.listen-address=0.0.0.0:9100'
    restart: unless-stopped
    networks:
      - monitoring
    pid: host

  # ============================================================================
  # cAdvisor - Container Metrics (Optional)
  # ============================================================================
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: flakeguard-cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    restart: unless-stopped
    networks:
      - monitoring

  # ============================================================================
  # PostgreSQL Exporter - Database Metrics
  # ============================================================================
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.13.2
    container_name: flakeguard-postgres-exporter
    ports:
      - "9187:9187"
    environment:
      - DATA_SOURCE_NAME=postgresql://postgres:postgres@postgres:5432/flakeguard?sslmode=disable
      - PG_EXPORTER_EXTEND_QUERY_PATH=/etc/postgres_exporter/queries.yaml
    volumes:
      - ./monitoring/postgres-queries.yaml:/etc/postgres_exporter/queries.yaml:ro
    restart: unless-stopped
    networks:
      - monitoring
      - default  # Connect to main application network
    depends_on:
      - postgres

  # ============================================================================
  # Redis Exporter - Cache Metrics  
  # ============================================================================
  redis-exporter:
    image: oliver006/redis_exporter:v1.53.0
    container_name: flakeguard-redis-exporter
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://redis:6379
      - REDIS_PASSWORD=""
    restart: unless-stopped
    networks:
      - monitoring
      - default  # Connect to main application network
    depends_on:
      - redis

# ============================================================================
# Networks
# ============================================================================
networks:
  monitoring:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
  default:
    external: true
    name: flakeguard_default

# ============================================================================
# Volumes
# ============================================================================
volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  alertmanager-data:
    driver: local